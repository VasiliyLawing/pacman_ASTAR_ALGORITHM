/*******************************************************************************
 * Copyright (c) 2022.  Anysolo LLC
 ******************************************************************************/

// Complete this program. Check the solution.

package level2v3.unit5.tasks

import com.anysolo.toyGraphics.*
import kotlin.math.roundToInt


private data class Thingy(var x: Double, var y: Double, var speedX: Double, var speedY: Double)


private fun drawRays(gc: Graphics, targets: List<Thingy>) {
    gc.color = Pal16.brightRed

    for (t in targets) {
        gc.drawLine(gc.window.width/2, gc.window.height, t.x.roundToInt(), t.y.roundToInt())
    }
}


private fun drawTargetArea(gc: Graphics, left: Int, right: Int) {
    val wnd = gc.window

    gc.color = Pal16.darkGray
    gc.drawLine(left, 0, left, wnd.height - 1)
    gc.drawLine(right, 0, right, wnd.height - 1)
}


fun main() {
    val wnd = Window(800, 600, buffered = true, background = Pal16.black)

    val thingies = listOf(
        Thingy(0.0, 0.0, 1.5, 0.7),
        Thingy(100.0, 100.0, 0.9, 0.5),
        Thingy(200.0, 200.0, 0.8, 0.4),
        Thingy(400.0, 400.0, 0.3, 0.1)
    )

    val targetAreaLeft = wnd.width/3
    val targetAreaRight = wnd.width*2/3

    while (true) {
        val gc = Graphics(wnd)
        gc.clear()

        drawTargetArea(gc, targetAreaLeft, targetAreaRight)

        gc.color = Pal16.green
        for (thingy in thingies) {
            gc.drawRect(thingy.x.roundToInt(), thingy.y.roundToInt(), 10, 10, fill = true)
            thingy.x += thingy.speedX
            thingy.y += thingy.speedY
        }

        // call drawRays function here. Pass all thingies with x between targetAreaLeft and targetAreaRight as argument

        gc.close()

        sleep(10)
    }
}
